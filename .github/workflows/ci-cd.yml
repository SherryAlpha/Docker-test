name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log file structure
        run: find . | sort

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/my-node-sample-project:latest
            ${{ secrets.DOCKER_USERNAME }}/my-node-sample-project:staging

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code (force fresh checkout)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Initialize Docker Swarm
        run: docker swarm init || true

      - name: Deploy to Environment
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            docker stack deploy -c ./stack-deploy-production.yml docker-test-production
          elif [ "${{ github.ref_name }}" == "staging" ]; then
            docker stack deploy -c ./stack-deploy-staging.yml docker-test-staging
          else
            echo "No matching branch for deployment."
            exit 1
          fi
