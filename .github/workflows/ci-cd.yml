name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug repository checkout
        run: ls -la

      - name: Log file structure
        run: |
          echo "Listing all files in workspace:"
          find . | sort

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-node-sample-project:latest

  fail:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for stack-deploy.yml
        run: |
          if ! [ -f "./stack-deploy.yml" ]; then
            echo "stack-deploy.yml not found! Failing the job.";
            exit 1;
          fi
        continue-on-error: false

  deploy:
    runs-on: ubuntu-latest
    needs: [build, fail]
    steps:
      - name: Checkout code (force fresh checkout)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Initialize Docker Swarm
        run: docker swarm init || true

      - name: Find stack-deploy.yml
        run: find . -name "stack-deploy.yml"

      - name: Log file structure
        run: |
          echo "Logging complete file structure:"
          find . -type f | sort
          ls -laR

      - name: Deploy to Docker Swarm
        run: |
          docker network create --driver overlay app-network || true
          docker stack deploy -c ./stack-deploy.yml docker-test
